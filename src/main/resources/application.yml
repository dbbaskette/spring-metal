server:
  port: 8080

spring:
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:local,llm,mcp}
  jpa:
    generate-ddl: true
  http:
    client:
      factory: simple
      timeout:
        connection: 10s
        read: 30s
  task:
    execution:
      pool:
        core-size: 4
        max-size: 16
        queue-capacity: 100

---
# Local Profile - for local development
spring:
  config:
    activate:
      on-profile: local
  datasource:
    url: "jdbc:postgresql://localhost:15432/music"
    driver-class-name: org.postgresql.Driver
    username: gpadmin
    password: ${DB_PASSWORD:}
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
  ai:
    openai:
      base-url: http://127.0.0.1:1234
      api-key: local-development-key
      chat:
        options:
          model: qwen/qwen3-4b-2507
          temperature: 0.7
      embedding:
        options:
          model: text-embedding-nomic-embed-text-v2
    retry:
      max-attempts: 2
      on-client-errors: false
    vectorstore:
      pgvector:
        initialize-schema: true
        remove-existing-vector-store-table: false
        index-type: HNSW
        distance-type: COSINE_DISTANCE
        dimensions: 768

---
# Cloud Profile - for Cloud Foundry deployment
spring:
  config:
    activate:
      on-profile: cloud
  ai:
    vectorstore:
      pgvector:
        initialize-schema: true
        remove-existing-vector-store-table: false
        index-type: HNSW
        distance-type: COSINE_DISTANCE
        dimensions: 1536

---
# HTTP2 Profile
spring:
  config:
    activate:
      on-profile: http2
server:
  http2:
    enabled: true
  port: 8443

---
# MySQL Profile (optional)
spring:
  config:
    activate:
      on-profile: mysql
  datasource:
    url: "jdbc:mysql://localhost/music"
    driver-class-name: com.mysql.jdbc.Driver
    username:
    password:
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL55Dialect

---
# LLM Profile - required for AI features
spring:
  config:
    activate:
      on-profile: llm

---
logging:
  level:
    root: INFO
    org.springframework.ai: DEBUG
    org.springframework.ai.openai: TRACE
    org.springframework.ai.vectorstore: DEBUG
    org.springframework.ai.mcp: DEBUG
    io.modelcontextprotocol: DEBUG
    org.springframework.ai.tool: DEBUG
    org.springframework.ai.autoconfigure.mcp: DEBUG
    org.springframework.ai.mcp.client: TRACE
    org.springframework.ai.mcp.client.transport: TRACE
    org.springframework.web.client: DEBUG

---
# MCP Profile - for Model Context Protocol integration
spring:
  config:
    activate:
      on-profile: mcp
  ai:
    mcp:
      client:
        enabled: true
        name: spring-metal-mcp-client
        type: SYNC
        toolcallback:
          enabled: true
        streamable-http:
          connections:
            audiodb:
              url: "http://localhost:8090"
              endpoint: "/api/mcp"